#############################################################################
# Makefile for building: cuteSniffer
# Generated by qmake (2.01a) (Qt 4.8.6) on: dim. déc. 14 18:02:59 2014
# Project:  cuteSniffer.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile cuteSniffer.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Igraphic -Ipacket -Itools -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = graphic/FocusView.cpp \
		graphic/Interaction.cpp \
		graphic/MainScreen.cpp \
		packet/AProtocol.cpp \
		packet/Ethernet.cpp \
		tools/RawSocket.cpp \
		tools/Utils.cpp \
		main.cpp moc_FocusView.cpp \
		moc_MainScreen.cpp
OBJECTS       = FocusView.o \
		Interaction.o \
		MainScreen.o \
		AProtocol.o \
		Ethernet.o \
		RawSocket.o \
		Utils.o \
		main.o \
		moc_FocusView.o \
		moc_MainScreen.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		cuteSniffer.pro
QMAKE_TARGET  = cuteSniffer
DESTDIR       = 
TARGET        = cuteSniffer

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: cuteSniffer.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile cuteSniffer.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile cuteSniffer.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cuteSniffer1.0.0 || $(MKDIR) .tmp/cuteSniffer1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cuteSniffer1.0.0/ && $(COPY_FILE) --parents graphic/FocusView.hh graphic/Interaction.hh graphic/MainScreen.hh packet/AProtocol.hh packet/ARP.hh packet/BrutProtocol.hh packet/Ethernet.hh packet/ICMP.hh packet/ICMPV6.hh packet/IP.hh packet/IPV6.hh packet/TCP.hh packet/UDP.hh tools/RawSocket.hh tools/Utils.hh .tmp/cuteSniffer1.0.0/ && $(COPY_FILE) --parents graphic/FocusView.cpp graphic/Interaction.cpp graphic/MainScreen.cpp packet/AProtocol.cpp packet/Ethernet.cpp tools/RawSocket.cpp tools/Utils.cpp main.cpp .tmp/cuteSniffer1.0.0/ && (cd `dirname .tmp/cuteSniffer1.0.0` && $(TAR) cuteSniffer1.0.0.tar cuteSniffer1.0.0 && $(COMPRESS) cuteSniffer1.0.0.tar) && $(MOVE) `dirname .tmp/cuteSniffer1.0.0`/cuteSniffer1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cuteSniffer1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_FocusView.cpp moc_MainScreen.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_FocusView.cpp moc_MainScreen.cpp
moc_FocusView.cpp: graphic/Interaction.hh \
		graphic/FocusView.hh
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) graphic/FocusView.hh -o moc_FocusView.cpp

moc_MainScreen.cpp: graphic/Interaction.hh \
		graphic/MainScreen.hh
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) graphic/MainScreen.hh -o moc_MainScreen.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

FocusView.o: graphic/FocusView.cpp graphic/MainScreen.hh \
		graphic/Interaction.hh \
		graphic/FocusView.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FocusView.o graphic/FocusView.cpp

Interaction.o: graphic/Interaction.cpp graphic/Interaction.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Interaction.o graphic/Interaction.cpp

MainScreen.o: graphic/MainScreen.cpp graphic/FocusView.hh \
		graphic/Interaction.hh \
		graphic/MainScreen.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainScreen.o graphic/MainScreen.cpp

AProtocol.o: packet/AProtocol.cpp packet/AProtocol.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AProtocol.o packet/AProtocol.cpp

Ethernet.o: packet/Ethernet.cpp packet/Ethernet.hh \
		packet/AProtocol.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Ethernet.o packet/Ethernet.cpp

RawSocket.o: tools/RawSocket.cpp tools/RawSocket.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RawSocket.o tools/RawSocket.cpp

Utils.o: tools/Utils.cpp tools/Utils.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Utils.o tools/Utils.cpp

main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

moc_FocusView.o: moc_FocusView.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FocusView.o moc_FocusView.cpp

moc_MainScreen.o: moc_MainScreen.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainScreen.o moc_MainScreen.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

